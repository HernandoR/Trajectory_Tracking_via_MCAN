# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Run Experiments

on:
  workflow_dispatch:
env:
  'GITHUB_ACTIONS': True
  'Profile': 'GITHUB_ACTIONS'
permissions:
  contents: read

jobs:
  build:
  
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Setup TeX Live
      uses: teatimeguest/setup-texlive-action@v3
      id: setup
      with:
        packages: scheme-basic
        
    - if: fromJSON(steps.setup.outputs.cache-restored)
      run: echo 'A cache has been found'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Run Python script
      run: |
        python Scripts/experiment.py
      
    - name: Create tar archive
      run: tar -cvf Result.tar Result/*
      
    - name: Delete Old Firmware Assets
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.BUILD_DATE }}
        fail-if-no-assets: false
        fail-if-no-release: false
        assets: "*"
        
    - name: Deploy Files To Release
      uses: ncipollo/release-action@v1.13.0
      with:
        name: Result-${{ env.BUILD_DATE }}
        allowUpdates: true
        replacesArtifacts: true
        tag: ${{ env.BUILD_DATE }}
        body: ${{ env.BUILD_DATE }}
        commit: ${{ env.CURRENT_BRANCH }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: Result.tar
